{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { startSession } from \"mongoose\";\nimport { login, register } from '../callAPI/userCall';\nexport const loginSlice = createSlice({\n  name: 'loginUser',\n  initialState: {\n    currentUser: {},\n    isLoading: null,\n    isAuthenticated: null,\n    error: null\n  },\n  reducers: {},\n  extraReducers: {\n    [login.pending]: state => {\n      state.isLoading = true;\n      state.error = false;\n    },\n    [login.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.currentUser = action.payload;\n      state.isAuthenticated = true;\n      state.error = false;\n    },\n    [login.rejected]: state => {\n      state.isLoading = false;\n      state.error = true;\n    },\n    [register.pending]: state => {\n      state.isLoading = true;\n      state.error = false;\n    },\n    [register.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.currentUser = action.payload;\n      state.isAuthenticated = true;\n      state.error = false;\n    },\n    [register.rejected]: state => {\n      state.isLoading = false;\n      state.error = true;\n    }\n  }\n}); // export const registerSlice = createSlice({\n//     name:'registerUser',\n//     initialState:{\n//         currentUser : {},\n//         isLoading: false,\n//         isAuthenticated: false,\n//         error: null\n//     },\n//     reducers:{\n//         registerRequest:(state)=>{\n//             state.isLoading = true\n//             state.isAuthenticated = false\n//             state.error = null\n//         },\n//         registerSuccess:(state, action)=>{\n//             state.currentUser = action.payload\n//             state.isLoading = false\n//             state.isAuthenticated = true\n//             state.error = null\n//         },\n//         registerFailure:(state, action)=>{\n//             state.currentUser = null\n//             state.isLoading = false\n//             state.isAuthenticated = false\n//             state.error = action.payload\n//         },\n//         clearError:(state)=>{\n//             state.error=null\n//         }\n//     }\n// })","map":{"version":3,"names":["createSlice","startSession","login","register","loginSlice","name","initialState","currentUser","isLoading","isAuthenticated","error","reducers","extraReducers","pending","state","fulfilled","action","payload","rejected"],"sources":["C:/Users/thuan/Desktop/watchshop/frontend/src/redux/Slice/userSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\"\r\nimport { startSession } from \"mongoose\";\r\n\r\nimport {login,register} from  '../callAPI/userCall'\r\n\r\nexport const loginSlice = createSlice({\r\n    name:'loginUser',\r\n    initialState:{\r\n        currentUser:{},\r\n        isLoading: null,\r\n        isAuthenticated : null,\r\n        error: null,\r\n    },\r\n    reducers:{\r\n    },\r\n    extraReducers:{\r\n     \r\n        [login.pending] : (state)=>{\r\n            state.isLoading = true\r\n            state.error = false\r\n        },\r\n        [login.fulfilled] : (state,action)=>{\r\n            state.isLoading = false\r\n            state.currentUser = action.payload\r\n            state.isAuthenticated = true\r\n            state.error = false\r\n        },\r\n        [login.rejected] : (state)=>{\r\n            state.isLoading = false\r\n            state.error = true\r\n        },\r\n\r\n        [register.pending] :(state)=>{\r\n            state.isLoading = true\r\n            state.error = false\r\n        },\r\n        [register.fulfilled] :(state,action)=>{\r\n            state.isLoading = false\r\n            state.currentUser = action.payload\r\n            state.isAuthenticated = true\r\n            state.error = false\r\n        },\r\n        [register.rejected] :(state)=>{\r\n            state.isLoading = false\r\n            state.error = true\r\n        },\r\n    },\r\n\r\n})\r\n\r\n// export const registerSlice = createSlice({\r\n//     name:'registerUser',\r\n//     initialState:{\r\n//         currentUser : {},\r\n//         isLoading: false,\r\n//         isAuthenticated: false,\r\n//         error: null\r\n//     },\r\n//     reducers:{\r\n//         registerRequest:(state)=>{\r\n//             state.isLoading = true\r\n//             state.isAuthenticated = false\r\n//             state.error = null\r\n//         },\r\n//         registerSuccess:(state, action)=>{\r\n//             state.currentUser = action.payload\r\n//             state.isLoading = false\r\n//             state.isAuthenticated = true\r\n//             state.error = null\r\n//         },\r\n//         registerFailure:(state, action)=>{\r\n//             state.currentUser = null\r\n//             state.isLoading = false\r\n//             state.isAuthenticated = false\r\n//             state.error = action.payload\r\n//         },\r\n//         clearError:(state)=>{\r\n//             state.error=null\r\n//         }\r\n//     }\r\n\r\n// })\r\n\r\n"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,SAASC,YAAT,QAA6B,UAA7B;AAEA,SAAQC,KAAR,EAAcC,QAAd,QAA8B,qBAA9B;AAEA,OAAO,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EAClCK,IAAI,EAAC,WAD6B;EAElCC,YAAY,EAAC;IACTC,WAAW,EAAC,EADH;IAETC,SAAS,EAAE,IAFF;IAGTC,eAAe,EAAG,IAHT;IAITC,KAAK,EAAE;EAJE,CAFqB;EAQlCC,QAAQ,EAAC,EARyB;EAUlCC,aAAa,EAAC;IAEV,CAACV,KAAK,CAACW,OAAP,GAAmBC,KAAD,IAAS;MACvBA,KAAK,CAACN,SAAN,GAAkB,IAAlB;MACAM,KAAK,CAACJ,KAAN,GAAc,KAAd;IACH,CALS;IAMV,CAACR,KAAK,CAACa,SAAP,GAAoB,CAACD,KAAD,EAAOE,MAAP,KAAgB;MAChCF,KAAK,CAACN,SAAN,GAAkB,KAAlB;MACAM,KAAK,CAACP,WAAN,GAAoBS,MAAM,CAACC,OAA3B;MACAH,KAAK,CAACL,eAAN,GAAwB,IAAxB;MACAK,KAAK,CAACJ,KAAN,GAAc,KAAd;IACH,CAXS;IAYV,CAACR,KAAK,CAACgB,QAAP,GAAoBJ,KAAD,IAAS;MACxBA,KAAK,CAACN,SAAN,GAAkB,KAAlB;MACAM,KAAK,CAACJ,KAAN,GAAc,IAAd;IACH,CAfS;IAiBV,CAACP,QAAQ,CAACU,OAAV,GAAqBC,KAAD,IAAS;MACzBA,KAAK,CAACN,SAAN,GAAkB,IAAlB;MACAM,KAAK,CAACJ,KAAN,GAAc,KAAd;IACH,CApBS;IAqBV,CAACP,QAAQ,CAACY,SAAV,GAAsB,CAACD,KAAD,EAAOE,MAAP,KAAgB;MAClCF,KAAK,CAACN,SAAN,GAAkB,KAAlB;MACAM,KAAK,CAACP,WAAN,GAAoBS,MAAM,CAACC,OAA3B;MACAH,KAAK,CAACL,eAAN,GAAwB,IAAxB;MACAK,KAAK,CAACJ,KAAN,GAAc,KAAd;IACH,CA1BS;IA2BV,CAACP,QAAQ,CAACe,QAAV,GAAsBJ,KAAD,IAAS;MAC1BA,KAAK,CAACN,SAAN,GAAkB,KAAlB;MACAM,KAAK,CAACJ,KAAN,GAAc,IAAd;IACH;EA9BS;AAVoB,CAAD,CAA9B,C,CA6CP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}