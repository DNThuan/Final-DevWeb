{"ast":null,"code":"import { publicRequest } from '../requestMethods';\nimport { createAsyncThunk } from '@reduxjs/toolkit'; //Login\n\nexport const login = createAsyncThunk(\"user/login\", async user => {\n  // try{\n  // const config = { headers: { \"Content-Type\": \"application/json\" } }; \n  const {\n    data\n  } = await publicRequest.post(`/login`, user // config,\n  );\n  return data.user; // }catch(err){\n  //     return err.response.data.message\n  // }\n}); //Regiter\n\nexport const register = createAsyncThunk(\"user/register\", async userData => {\n  const {\n    data\n  } = await publicRequest.post(`/register`, userData);\n  return data.user;\n}); //Load user\n\nexport const loadUser = createAsyncThunk(\"user/loadUser\", async () => {\n  const {\n    data\n  } = await publicRequest.get(`/me`);\n  return data.user;\n}); //Log out\n\nexport const logout = createAsyncThunk('user/logout', async () => {\n  await publicRequest.get(`/logout`);\n});","map":{"version":3,"names":["publicRequest","createAsyncThunk","login","user","data","post","register","userData","loadUser","get","logout"],"sources":["C:/Users/thuan/Desktop/watchshop/frontend/src/redux/callAPI/userCall.js"],"sourcesContent":["\r\nimport {publicRequest} from '../requestMethods'\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\n//Login\r\nexport const login = createAsyncThunk (\r\n    \"user/login\",\r\n    async (user)=> {\r\n        // try{\r\n            // const config = { headers: { \"Content-Type\": \"application/json\" } }; \r\n            const {data} = await publicRequest.post(\r\n                `/login`,\r\n                user,\r\n                // config,\r\n            )\r\n            return data.user\r\n        // }catch(err){\r\n        //     return err.response.data.message\r\n        // }\r\n    }\r\n);\r\n\r\n\r\n//Regiter\r\nexport const register = createAsyncThunk(\r\n    \"user/register\",\r\n    async (userData) => {\r\n        const {data} = await publicRequest.post(\r\n            `/register`, \r\n            userData\r\n        )\r\n        return data.user\r\n    }    \r\n);\r\n\r\n\r\n//Load user\r\nexport const loadUser = createAsyncThunk(\r\n    \"user/loadUser\",\r\n    async () => {\r\n        const {data} = await publicRequest.get(\r\n            `/me`,\r\n        )\r\n        return data.user\r\n    }\r\n);\r\n\r\n//Log out\r\nexport const logout = createAsyncThunk(\r\n    'user/logout',\r\n    async()=>{\r\n        await publicRequest.get(\r\n            `/logout`\r\n        )\r\n    }\r\n)"],"mappings":"AACA,SAAQA,aAAR,QAA4B,mBAA5B;AACA,SAASC,gBAAT,QAAiC,kBAAjC,C,CAEA;;AACA,OAAO,MAAMC,KAAK,GAAGD,gBAAgB,CACjC,YADiC,EAEjC,MAAOE,IAAP,IAAe;EACX;EACI;EACA,MAAM;IAACC;EAAD,IAAS,MAAMJ,aAAa,CAACK,IAAd,CAChB,QADgB,EAEjBF,IAFiB,CAGjB;EAHiB,CAArB;EAKA,OAAOC,IAAI,CAACD,IAAZ,CARO,CASX;EACA;EACA;AACH,CAdgC,CAA9B,C,CAkBP;;AACA,OAAO,MAAMG,QAAQ,GAAGL,gBAAgB,CACpC,eADoC,EAEpC,MAAOM,QAAP,IAAoB;EAChB,MAAM;IAACH;EAAD,IAAS,MAAMJ,aAAa,CAACK,IAAd,CAChB,WADgB,EAEjBE,QAFiB,CAArB;EAIA,OAAOH,IAAI,CAACD,IAAZ;AACH,CARmC,CAAjC,C,CAYP;;AACA,OAAO,MAAMK,QAAQ,GAAGP,gBAAgB,CACpC,eADoC,EAEpC,YAAY;EACR,MAAM;IAACG;EAAD,IAAS,MAAMJ,aAAa,CAACS,GAAd,CAChB,KADgB,CAArB;EAGA,OAAOL,IAAI,CAACD,IAAZ;AACH,CAPmC,CAAjC,C,CAUP;;AACA,OAAO,MAAMO,MAAM,GAAGT,gBAAgB,CAClC,aADkC,EAElC,YAAS;EACL,MAAMD,aAAa,CAACS,GAAd,CACD,SADC,CAAN;AAGH,CANiC,CAA/B"},"metadata":{},"sourceType":"module"}