{"ast":null,"code":"import { publicRequest } from '../requestMethods';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nexport const login = createAsyncThunk(\"user/login\", async user => {\n  // try{\n  // const config = { headers: { \"Content-Type\": \"application/json\" } }; \n  const {\n    data\n  } = await publicRequest.post(`/login`, user // config,\n  );\n  return data.user; // }catch(err){\n  //     return err.response.data.message\n  // }\n});\nexport const register = createAsyncThunk(\"user/register\", async userData => {\n  const {\n    data\n  } = await publicRequest.post(`/register`, userData);\n  return data.user;\n}); // export const register = (name,email,password) => async (dispatch) => {\n//     try{\n//         dispatch(registerSlice.actions.registerRequest());\n//         const config =  { headers: { \"Content-Type\": \"application/json\" } }; \n//         const { data } = await publicRequest.post(\n//             `/register`, \n//             {name,email,password}, \n//             config\n//         );\n//         dispatch(registerSlice.actions.registerSuccess(data.user))\n//     }catch(err){    \n//         dispatch(registerSlice.actions.registerFailure(err.response.data.message))\n//     }\n// }","map":{"version":3,"names":["publicRequest","createAsyncThunk","login","user","data","post","register","userData"],"sources":["C:/Users/thuan/Desktop/watchshop/frontend/src/redux/callAPI/userCall.js"],"sourcesContent":["\r\nimport {publicRequest} from '../requestMethods'\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const login = createAsyncThunk (\r\n    \"user/login\",\r\n    async (user)=> {\r\n        // try{\r\n            // const config = { headers: { \"Content-Type\": \"application/json\" } }; \r\n            const {data} = await publicRequest.post(\r\n                `/login`,\r\n                user,\r\n                // config,\r\n            )\r\n            return data.user\r\n        // }catch(err){\r\n        //     return err.response.data.message\r\n        // }\r\n    }\r\n)\r\n\r\nexport const register = createAsyncThunk(\r\n    \"user/register\",\r\n    async (userData) => {\r\n        const {data} = await publicRequest.post(\r\n            `/register`, \r\n            userData\r\n        )\r\n        return data.user\r\n    }    \r\n)\r\n\r\n// export const register = (name,email,password) => async (dispatch) => {\r\n//     try{\r\n//         dispatch(registerSlice.actions.registerRequest());\r\n//         const config =  { headers: { \"Content-Type\": \"application/json\" } }; \r\n\r\n//         const { data } = await publicRequest.post(\r\n//             `/register`, \r\n//             {name,email,password}, \r\n//             config\r\n//         );\r\n//         dispatch(registerSlice.actions.registerSuccess(data.user))\r\n//     }catch(err){    \r\n//         dispatch(registerSlice.actions.registerFailure(err.response.data.message))\r\n//     }\r\n// }\r\n\r\n"],"mappings":"AACA,SAAQA,aAAR,QAA4B,mBAA5B;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAEA,OAAO,MAAMC,KAAK,GAAGD,gBAAgB,CACjC,YADiC,EAEjC,MAAOE,IAAP,IAAe;EACX;EACI;EACA,MAAM;IAACC;EAAD,IAAS,MAAMJ,aAAa,CAACK,IAAd,CAChB,QADgB,EAEjBF,IAFiB,CAGjB;EAHiB,CAArB;EAKA,OAAOC,IAAI,CAACD,IAAZ,CARO,CASX;EACA;EACA;AACH,CAdgC,CAA9B;AAiBP,OAAO,MAAMG,QAAQ,GAAGL,gBAAgB,CACpC,eADoC,EAEpC,MAAOM,QAAP,IAAoB;EAChB,MAAM;IAACH;EAAD,IAAS,MAAMJ,aAAa,CAACK,IAAd,CAChB,WADgB,EAEjBE,QAFiB,CAArB;EAIA,OAAOH,IAAI,CAACD,IAAZ;AACH,CARmC,CAAjC,C,CAWP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}