{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport { UserSlice } from \"./Slice/userSlice\";\nimport { productsSlide, productSlice } from \"./Slice/productSlice\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n};\nconst rootReducer = combineReducers({\n  user: UserSlice.reducer,\n  products: productsSlide.reducer,\n  product: productSlice.reducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nlet persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","UserSlice","productsSlide","productSlice","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","version","storage","rootReducer","user","reducer","products","product","persistedReducer","store","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["C:/Users/thuan/Desktop/watchshop/frontend/src/redux/store.js"],"sourcesContent":["import { configureStore, combineReducers} from \"@reduxjs/toolkit\";\r\nimport {UserSlice} from \"./Slice/userSlice\";\r\nimport {productsSlide, productSlice} from \"./Slice/productSlice\";\r\nimport {persistStore,persistReducer, FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER,} from 'redux-persist'\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    version: 1,\r\n    storage,\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    user: UserSlice.reducer,\r\n    products: productsSlide.reducer,\r\n    product: productSlice.reducer, \r\n})\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\n\r\nexport const store =  configureStore({\r\n    reducer:persistedReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nlet persistor = persistStore(store)\r\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAA+C,kBAA/C;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,SAAQC,aAAR,EAAuBC,YAAvB,QAA0C,sBAA1C;AACA,SAAQC,YAAR,EAAqBC,cAArB,EAAqCC,KAArC,EAA2CC,SAA3C,EAAqDC,KAArD,EAA2DC,OAA3D,EAAmEC,KAAnE,EAAyEC,QAAzE,QAAyF,eAAzF;AAEA,MAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,MADa;EAElBC,OAAO,EAAE,CAFS;EAGlBC;AAHkB,CAAtB;AAMA,MAAMC,WAAW,GAAGhB,eAAe,CAAC;EAChCiB,IAAI,EAAEhB,SAAS,CAACiB,OADgB;EAEhCC,QAAQ,EAAEjB,aAAa,CAACgB,OAFQ;EAGhCE,OAAO,EAAEjB,YAAY,CAACe;AAHU,CAAD,CAAnC;AAMA,MAAMG,gBAAgB,GAAGhB,cAAc,CAACO,aAAD,EAAgBI,WAAhB,CAAvC;AAGA,OAAO,MAAMM,KAAK,GAAIvB,cAAc,CAAC;EACjCmB,OAAO,EAACG,gBADyB;EAEjCE,UAAU,EAAGC,oBAAD,IACZA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACpB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;IADC;EADA,CAAD;AAHa,CAAD,CAA7B;AAUP,IAAIgB,SAAS,GAAGvB,YAAY,CAACkB,KAAD,CAA5B"},"metadata":{},"sourceType":"module"}